package twopointers

import (
	"sort"
)

// Вы — университетский тренер.
//  Всего в университете под Вашим надзором n студентов,
//  умение программировать i-го студента равно ai.``

// Вы хотите составить команду для нового соревнования по программированию.
//  Как Вы знаете, чем больше студентов на соревновании — тем больше шансов победить!
//  Поэтому Вы хотите составить максимальную по количеству студентов команду.
//  Но Вы также знаете, что команда должна быть сбалансированной.
//  Это означает, что умение программировать,
//  каждой пары студентов в команде должно отличаться не более, чем на 5.

// Ваша задача —
// 	найти максимально возможное количество студентов в сбалансированной команде.

// Входные данные
// slice входных данных содержит n
//  целых чисел a1,a2,…,an (1≤ai≤109),
//  где ai означает умение i-го студента программировать.

// Выходные данные
// выведите одно целое число — максимально возможное количество студентов в сбалансированной команде.

// тест кейсы

// students 1 10 17 12 15 2
// res - 3

// 1337 1337 1337 1337 1337 1337 1337 1337 1337 1337
// res - 10

// 1 1000 10000 10 100 1000000000
// res - 1

func SecondProblem(students []int) int {
	res := 0
	left := 0

	sort.Sort(sort.IntSlice(students))
	for right := range students {
		if students[right]-students[left] > 5 {
			left++
		}

		if res < right-left+1 {
			res = right - left + 1
		}
	}
	return res
}
